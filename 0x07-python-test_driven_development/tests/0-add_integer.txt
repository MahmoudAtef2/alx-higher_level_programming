===========================
test for 0-add_integer.py
===========================

Import the module:

    >>> add_integer = __import__('0-add_integer').add_integer

test the normal inp:

    >>> add_integer(2, 2)
    4

test a as negative:

    >>> add_integer(-3, 2)
    1

test a as float:

    >>> add_integer(3.34, 2)
    5

test b as float:

    >>> add_integer(6, 4.77)
    10

test negative floats:

    >>> add_integer(-4.90, -2.22)
    -6

test a as int and b as float:

    >>> add_integer(5, 2.78)
    7

test with one number:

    >>> add_integer(7)
    105

test a as str:

    >>> add_integer("test", 5)
    Traceback (most recent call last):
    TypeError: a must be an integer

test b as str:

    >>> add_integer(5, "test")
    Traceback (most recent call last):
    TypeError: b must be an integer

test a and b as str:

    >>> add_integer("test", "test")
    Traceback (most recent call last):
    TypeError: a must be an integer

test b as none value:

    >>> add_integer(2.3, None)
    Traceback (most recent call last):
    TypeError: b must be an integer

test with none value:

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

tests with infinity:

    >>> add_integer(float('inf'), float('-inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

tests with  nan:

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer
